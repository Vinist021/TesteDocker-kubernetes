# Persistent Volume
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-dados
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/var/lib/data"

---
# Persistent Volume Claim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-dados
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
# ConfigMap com o my.cnf
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
data:
  my.cnf: |
    [mysqld]
    user=mysql
    datadir=/var/lib/mysql
    socket=/var/lib/mysql/mysql.sock
    symbolic-links=0

    [client]
    port=3306
    socket=/var/lib/mysql/mysql.sock

---
# Deployment MySQL
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - image: vinist021/projeto-database:1.0
        args:
        - "--ignore-db-dir=lost+found"
        imagePullPolicy: Always
        name: mysql
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-dados
          mountPath: /var/lib/mysql
        - name: mysql-config-volume
          mountPath: /etc/mysql/my.cnf
          subPath: my.cnf
      volumes:
      - name: mysql-dados
        persistentVolumeClaim:
          claimName: mysql-dados
      - name: mysql-config-volume
        configMap:
          name: mysql-config

---
# Deployment PHP
apiVersion: apps/v1
kind: Deployment
metadata:
  name: php
  labels:
    app: php
spec:
  replicas: 6
  selector:
    matchLabels:
      app: php
  template:
    metadata:
      labels:
        app: php
    spec:
      containers:
      - name: php
        image: vinist021/projeto-backend:1.0
        imagePullPolicy: Always
        ports:
        - containerPort: 80
